{
    "imports": [
        "$import glob",
        "$import os"
    ],
    "determinism": "$monai.utils.set_determinism(seed=123)",
    "cudnn_opt": "$setattr(torch.backends.cudnn, 'benchmark', True)",
    "device": "$torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')",
    "ckpt_path": "/workspace/data/tutorials/modules/bundles/spleen_segmentation/models/model.pt",
    "dataset_dir": "/workspace/data/Task09_Spleen",
    "images": "$list(sorted(glob.glob(@dataset_dir + '/imagesTr/*.nii.gz')))",
    "labels": "$list(sorted(glob.glob(@dataset_dir + '/labelsTr/*.nii.gz')))",
    "network_def": {
        "_target_": "UNet",
        "spatial_dims": 3,
        "in_channels": 1,
        "out_channels": 2,
        "channels": [
            16,
            32,
            64,
            128,
            256
        ],
        "strides": [
            2,
            2,
            2,
            2
        ],
        "num_res_units": 2,
        "norm": "batch"
    },
    "network": "$@network_def.to(@device)",
    "train": {
        "preprocessing": {
            "_target_": "Compose",
            "transforms": [
                {
                    "_target_": "LoadImaged",
                    "keys": ["image", "label"]
                },
                {
                    "_target_": "EnsureChannelFirstd",
                    "keys": ["image", "label"]
                },
                {
                    "_target_": "Orientationd",
                    "keys": ["image", "label"],
                    "axcodes": "RAS"
                },
                {
                    "_target_": "Spacingd",
                    "keys": ["image", "label"],
                    "pixdim": [1.5, 1.5, 2.0],
                    "mode": "bilinear"
                },
                {
                    "_target_": "ScaleIntensityRanged",
                    "keys": ["image", "label"],
                    "a_min": -57,
                    "a_max": 164,
                    "b_min": 0,
                    "b_max": 1,
                    "clip": true
                },
                {
                    "_target_": "RandCropByPosNegLabeld",
                    "keys": ["image", "label"],
                    "label_key": "label",
                    "spatial_size": [96, 96, 96],
                    "pos": 1,
                    "neg": 1,
                    "num_samples": 4,
                    "image_key": "image",
                    "image_threshold": 0
                },
                {
                    "_target_": "EnsureTyped",
                    "keys": ["image", "label"]
                }
            ]
        },
        "dataset": {
            "_target_": "CacheDataset",
            "data": "$[{'image': i, 'label': l} for i, l in zip(@images[:-9], @labels[:-9])]",
            "transform": "@train#preprocessing",
            "cache_rate": 1.0,
            "num_workers": 4
        },
        "dataloader": {
            "_target_": "DataLoader",
            "dataset": "@train#dataset",
            "batch_size": 1,
            "shuffle": false,
            "num_workers": 4
        }
    },
    "validate": {
        "preprocessing": {
            "_target_": "Compose",
            "transforms": [
                {
                    "_target_": "LoadImaged",
                    "keys": ["image", "label"]
                },
                {
                    "_target_": "EnsureChannelFirstd",
                    "keys": ["image", "label"]
                },
                {
                    "_target_": "Orientationd",
                    "keys": ["image", "label"],
                    "axcodes": "RAS"
                },
                {
                    "_target_": "Spacingd",
                    "keys": ["image", "label"],
                    "pixdim": [1.5, 1.5, 2.0],
                    "mode": "bilinear"
                },
                {
                    "_target_": "ScaleIntensityRanged",
                    "keys": ["image", "label"],
                    "a_min": -57,
                    "a_max": 164,
                    "b_min": 0,
                    "b_max": 1,
                    "clip": true
                },
                {
                    "_target_": "RandCropByPosNegLabeld",
                    "keys": ["image", "label"],
                    "label_key": "label",
                    "spatial_size": [96, 96, 96],
                    "pos": 1,
                    "neg": 1,
                    "num_samples": 4,
                    "image_key": "image",
                    "image_threshold": 0
                },
                {
                    "_target_": "EnsureTyped",
                    "keys": ["image", "label"]
                }
            ]
        },
        "dataset": {
            "_target_": "Dataset",
            "data": "$[{'image': i, 'label': l} for i, l in zip(@images[-9:], @labels[-9:])]",
            "transform": "@preprocessing"
        },
        "dataloader": {
            "_target_": "DataLoader",
            "dataset": "@dataset",
            "batch_size": 1,
            "shuffle": false,
            "num_workers": 4
        },
        "inferer": {
            "_target_": "SlidingWindowInferer",
            "roi_size": [
                96,
                96,
                96
            ],
            "sw_batch_size": 4,
            "overlap": 0.5
        },
        "postprocessing": {
            "_target_": "Compose",
            "transforms": [
                {
                    "_target_": "Activationsd",
                    "keys": "pred",
                    "softmax": true
                },
                {
                    "_target_": "Invertd",
                    "keys": "pred",
                    "transform": "@preprocessing",
                    "orig_keys": "image",
                    "meta_key_postfix": "meta_dict",
                    "nearest_interp": false,
                    "to_tensor": true
                },
                {
                    "_target_": "AsDiscreted",
                    "keys": "pred",
                    "argmax": true
                },
                {
                    "_target_": "SaveImaged",
                    "keys": "pred",
                    "meta_keys": "pred_meta_dict",
                    "output_dir": "eval"
                }
            ]
        },
        "handlers": [
            {
                "_target_": "CheckpointLoader",
                "_requires_": "@download_ckpt",
                "_disabled_": "$not os.path.exists(@ckpt_path)",
                "load_path": "@ckpt_path",
                "load_dict": {"model": "@network"}
            },
            {
                "_target_": "StatsHandler",
                "iteration_log": false
            }
        ]
    },
    "trainer": {
        "_target_": "SupervisedTrainer",
        "_requires_": ["determinism", "@cudnn_opt"],
        "device": "@device",
        "val_data_loader": "@dataloader",
        "network": "@network",
        "inferer": "@inferer",
        "postprocessing": "@postprocessing",
        "val_handlers": "@handlers",
        "amp": false
    }
}
